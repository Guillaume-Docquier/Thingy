    # def get_query_set(self):
    #     search_field = 'title'
    #     model = Post
    #
    #     queryset = model.objects.all()
    #     search_results = self.rewquest.query_params.get(search_field, None)
    #
    #     if search_results is not None:
    #         queryset = queryset.filter(search_results_id=search_results)
    #
    #     author = self.request.query_params.get('author', None)
    #     if author is not None:
    #         queryset = queryset.filter(author=author)
    #     return queryset
    #
    # def get_queryset(self):
    #     queryset = Post.objects.order_by('-created_at')
    #     if 'category' in self.request.query_params:
    #         queryset = queryset.filter(subcategory__category=self.request.query_params['category'])
    #
    #     if 'subcategory' in self.request.query_params:
    #         queryset = queryset.filter(subcategory__id=self.request.query_params['subcategory'])
    #
    #     if 'region' in self.request.query_params:
    #         queryset = queryset.filter(location__region=self.request.query_params['region'])
    #
    #     if 'location' in self.request.query_params:
    #         queryset = queryset.filter(location__id=self.request.query_params['location'])
    #
    #     if 'condition' in self.request.query_params:
    #         queryset = queryset.filter(condition__id=self.request.query_params['condition'])
    #
    #     author = self.request.query_params.get('author', None)
    #     if author is not None:
    #         queryset = queryset.filter(author=author)
    #     return queryset

  # def list(self, request):
    #     postreviews = PostReview.objects.order_by(
    #         'post__created_at', 'id').values(
    #         'id', 'rating', 'post__id', 'post__title')
    #     posts = [
    #         {
    #             'sid': c[0],
    #             'title': c[1],
    #             'postreviews': [{'id': vv['id'], 'title': vv['id']} for vv in v]
    #         } for c, v in groupby(postreviews, key=lambda s: (s['post__id'], s['post__title']))
    #     ]
    #     return Response(postreviews)
